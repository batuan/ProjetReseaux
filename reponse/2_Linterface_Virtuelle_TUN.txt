2.2 
1.
2. Routage : Suite à la disparition tragique de VM2-6, faut-il modifier les informations de routage sur VM1 ? ou sur VM1-6 ?
	Non
3.Faire un ping6 fc00:1234:ffff::1. Donner la capture sur tun0 (avec wireshark). Que constatez-vous ? 
	peut ping, mais pas capture de signal sur le wireshark (tshark)

PING fc00:1234:ffff::1(fc00:1234:ffff::1) 56 data bytes
64 bytes from fc00:1234:ffff::1: icmp_seq=1 ttl=64 time=0.038 ms
64 bytes from fc00:1234:ffff::1: icmp_seq=2 ttl=64 time=0.119 ms
64 bytes from fc00:1234:ffff::1: icmp_seq=3 ttl=64 time=0.067 ms
^C
--- fc00:1234:ffff::1 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2001ms
rtt min/avg/max/mdev = 0.038/0.074/0.119/0.034 ms

========
root@vm1:/home/vagrant# tshark -i tun0
tshark: Lua: Error during loading:
 [string "/usr/share/wireshark/init.lua"]:46: dofile has been disabled due to running Wireshark as superuser. See http://wiki.wireshark.org/CaptureSetup/CapturePrivileges for help in running Wireshark as an unprivileged user.
Running as user "root" and group "root". This could be dangerous.
Capturing on 'tun0'

4. Faire ping6 fc00:1234:ffff::10. Que constatez-vous ?

root@vm1:/dev/net# ping6 fc00:1234:ffff::10
PING fc00:1234:ffff::10(fc00:1234:ffff::10) 56 data bytes

^C
--- fc00:1234:ffff::10 ping statistics ---
10 packets transmitted, 0 received, 100% packet loss, time 9000ms

Capturing on 'tun0'
  1   0.000000 fc00:1234:ffff::1 -> fc00:1234:ffff::10 ICMPv6 104 Echo (ping) request id=0x60f2, seq=1, hop limit=64
  2   1.000456 fc00:1234:ffff::1 -> fc00:1234:ffff::10 ICMPv6 104 Echo (ping) request id=0x60f2, seq=2, hop limit=64
  3   2.000497 fc00:1234:ffff::1 -> fc00:1234:ffff::10 ICMPv6 104 Echo (ping) request id=0x60f2, seq=3, hop limit=64

5. Puisque l'adresse fc00:1234:ffff::1/64 est l'adresse réseau, chaque paquet qui passe au format fc00: 1234: ffff :: x passe par fc00:1234:ffff::1/64


2.3. Récupération des paquets

2. Tester avec dst=1

root@vm1:/dev/net# ping6 -c 1 fc00:1234:ffff::10
PING fc00:1234:ffff::10(fc00:1234:ffff::10) 56 data bytes
^C
--- fc00:1234:ffff::10 ping statistics ---
1 packets transmitted, 0 received, 100% packet loss, time 0ms

root@vm1:/mnt/partage/iftun# ./test_iftun tun0 | hexdump -C
00000000  00 00 86 dd 60 00 00 00  00 40 3a 40 fc 00 12 34  |....`....@:@...4|
00000010  ff ff 00 00 00 00 00 00  00 00 00 01 fc 00 12 34  |...............4|
00000020  ff ff 00 00 00 00 00 00  00 00 00 10 80 00 b4 08  |................|
00000030  63 09 00 01 40 43 b7 5f  00 00 00 00 88 81 0d 00  |c...@C._........|
00000040  00 00 00 00 10 11 12 13  14 15 16 17 18 19 1a 1b  |................|
00000050  1c 1d 1e 1f 20 21 22 23  24 25 26 27 28 29 2a 2b  |.... !"#$%&'()*+|

----tshark
root@vm1:/home/vagrant# tshark -i tun0 -x
tshark: Lua: Error during loading:
 [string "/usr/share/wireshark/init.lua"]:46: dofile has been disabled due to running Wireshark as superuser. See http://wiki.wireshark.org/CaptureSetup/CapturePrivileges for help in running Wireshark as an unprivileged user.
Running as user "root" and group "root". This could be dangerous.
Capturing on 'tun0'
0000  60 00 00 00 00 40 3a 40 fc 00 12 34 ff ff 00 00   `....@:@...4....
0010  00 00 00 00 00 00 00 01 fc 00 12 34 ff ff 00 00   ...........4....
0020  00 00 00 00 00 00 00 10 80 00 e5 eb 62 29 00 01   ............b)..
0030  82 42 b7 5f 00 00 00 00 1b 7f 07 00 00 00 00 00   .B._............
0040  10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f   ................
0050  20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f    !"#$%&'()*+,-./
0060  30 31 32 33 34 35 36 37                           01234567

---hexdump avec dst = dst.txt

root@vm1:/mnt/partage/iftun# hexdump -C dst.txt
00000000  00 00 86 dd 60 00 00 00  00 40 3a 40 fc 00 12 34  |....`....@:@...4|
00000010  ff ff 00 00 00 00 00 00  00 00 00 01 fc 00 12 34  |...............4|
00000020  ff ff 00 00 00 00 00 00  00 00 00 10 80 00 72 e9  |..............r.|
00000030  63 b2 00 01 03 44 b7 5f  00 00 00 00 12 f7 00 00  |c....D._........|
00000040  00 00 00 00 10 11 12 13  14 15 16 17 18 19 1a 1b  |................|
00000050  1c 1d 1e 1f 20 21 22 23  24 25 26 27 28 29 2a 2b  |.... !"#$%&'()*+|
00000060  2c 2d 2e 2f 30 31 32 33  34 35 36 37              |,-./01234567|
0000006c

c'est même

4. A quoi sert l'option IFF_NO_PI ? Que ce passe-t-il si vous ajoutez cette option lors de la création de l'interface ?
Un indicateur IFF_NO_PI peut être OU avec la valeur de base. IFF_NO_PI indique au noyau de ne pas fournir d'informations sur les paquets. Le but de IFF_NO_PI est de dire au noyau que les paquets seront des paquets IP "purs", sans octets ajoutés. Sinon (si IFF_NO_PI n'est pas défini), 4 octets supplémentaires sont ajoutés au début du paquet (2 octets d'indicateur et 2 octets de protocole)
